using Xunit;

namespace Tasks.Tests
{
    public class MeetingRoms2Tests
    {
        private readonly MeetingRooms2 _service = new MeetingRooms2();

        [Fact]
        public void Test1()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 0, 30 }, new[] { 5, 10 }, new[] { 15, 20 } });
            Assert.Equal(2, result);
        }

        [Fact]
        public void Test2()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 7, 10 }, new[] { 2, 4 } });
            Assert.Equal(1, result);
        }

        [Fact]
        public void Test3()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 5, 8 }, new[] { 6, 8 } });
            Assert.Equal(2, result);
        }

        [Fact]
        public void Test4()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 6, 15 }, new[] { 13, 20 }, new[] { 6, 17} });
            Assert.Equal(3, result);
        }

        [Fact]
        public void Test5()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 13, 15 }, new[] { 1, 13 } });
            Assert.Equal(1, result);
        }
        
        [Fact]
        public void Test6()
        {
            var result = _service.MinMeetingRooms(new[] {new[] {64738,614406},new[] {211748,780229},new[] {208641,307338},new[] {499908,869489},new[] {218907,889449},new[] {177201,481150},new[] {123679,384415},new[] {120440,404695},new[] {191810,491295},new[] {800783,826206},new[] {165175,221995},new[] {420412,799259},new[] {484168,617671},new[] {746410,886281},new[] {765198,792311},new[] {493853,971285},new[] {194579,313372},new[] {119757,766274},new[] {101315,917883},new[] {557309,599256},new[] {167729,723580},new[] {731216,988021},new[] {225883,752657},new[] {588461,854166},new[] {231328,285640},new[] {772811,869625},new[] {892212,973218},new[] {143535,306402},new[] {336799,998119},new[] {65892,767719},new[] {380440,518918},new[] {321447,558462},new[] {54489,234291},new[] {43934,44986},new[] {11260,968186},new[] {248987,707178},new[] {355162,798511},new[] {661962,781083},new[] {149228,412762},new[] {71084,953153},new[] {44890,655659},new[] {708781,956341},new[] {251847,707658},new[] {650743,932826},new[] {561965,814428},new[] {697026,932724},new[] {583473,919161},new[] {463638,951519},new[] {769086,785893},new[] {17912,923570},new[] {423089,653531},new[] {317269,395886},new[] {412117,701471},new[] {465312,520002},new[] {168739,770178},new[] {624091,814316},new[] {143729,249836},new[] {699196,879379},new[] {585322,989087},new[] {501009,949840},new[] {424092,580498},new[] {282845,345477},new[] {453883,926476},new[] {392148,878695},new[] {471772,771547},new[] {339375,590100},new[] {110499,619323},new[] {8713,291093},new[] {268241,283247},new[] {160815,621452},new[] {168922,810532},new[] {355051,377247},new[] {10461,488835},new[] {220598,261326},new[] {403537,438947},new[] {221492,640708},new[] {114702,926457},new[] {166567,477230},new[] {856127,882961},new[] {218411,256327},new[] {184364,909088},new[] {130802,828793},new[] {312028,811716},new[] {294638,839683},new[] {269329,343517},new[] {167968,391811},new[] {25351,369583},new[] {210660,454598},new[] {166834,576380},new[] {296440,873280},new[] {660142,822072},new[] {33441,778393},new[] {456500,955635},new[] {59220,954158},new[] {306295,429913},new[] {110402,448322},new[] {44523,88192},new[] {231386,353197},new[] {120940,902781},new[] {348758,597599},new[] {329467,664450},new[] {208411,890114},new[] {230238,516885},new[] {434113,602358},new[] {349759,419831},new[] {10689,308144},new[] {94526,180723},new[] {435280,986655},new[] {611999,690154},new[] {75208,395348},new[] {403243,489260},new[] {498884,611075},new[] {487209,863242},new[] {13900,873774},new[] {656706,782943},new[] {53478,586952},new[] {226216,723114},new[] {554799,922759},new[] {467777,689913},new[] {80630,147482},new[] {277803,506346},new[] {532240,976029},new[] {206622,761192},new[] {148277,985819},new[] {10879,807349},new[] {952227,971268},new[] {172074,919866},new[] {239230,384499},new[] {607687,984661},new[] {4405,264532},new[] {41071,437502},new[] {432603,661142},new[] {144398,907360},new[] {139605,360037},new[] {943191,997317},new[] {12894,171584},new[] {382477,800157},new[] {452077,518175},new[] {208007,398880},new[] {375250,489928},new[] {384503,726837},new[] {278181,628759},new[] {114470,635575},new[] {382297,733713},new[] {156559,874172},new[] {507016,815520},new[] {164461,532215},new[] {17332,536971},new[] {418721,911117},new[] {11497,14032}});
            Assert.Equal(77, result);
        }
        
        
       
        [Fact]
        public void Test7()
        {
            var result = _service.MinMeetingRooms(new[] {new []{765,989}, new []{466,472}, new []{860,996} ,new []{338,932}, new []{618,639},
                new []{616,936}, new []{832,864}, new []{92,758}});
            Assert.Equal(5, result);
        }

        [Fact]
        public void Test8()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 1, 5 }, new[] { 8, 9 } , new[] { 8, 9 } });
            Assert.Equal(2, result);
        }
        
        
        [Fact]
        public void Test9()
        {
            var result = _service.MinMeetingRooms(new[] { new[] { 1293, 2986 },
                new[] { 848, 3846 } , new[] { 4284, 5907 },new[] { 4466, 4781 }, new[] { 518, 2918 },new[] { 300, 5870 } });
            Assert.Equal(4, result);
        }
        
       
    }
}